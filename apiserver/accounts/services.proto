syntax = "proto3";

package containersai.apiserver.accounts;

import "google/rpc/status.proto";

option go_package = "github.com/containers-ai/federatorai-api/apiserver/accounts";

message CreateUserRequest {
    string name = 1;
    string password = 2;
    string domain_name = 3;
    string role = 4;
    string company = 5;
    string email = 6;
    string first_name = 7;
    string last_name = 8;
    string phone = 9;
    string URL = 10;
    string token = 11;
}

message CreateUserResponse {
    string name = 1;
    string domain_name = 2;
    string role = 3;
    string company = 4;
    string email = 5;
    string first_name = 6;
    string last_name = 7;
    string phone = 8;
    string URL = 9;
    string status = 10;
    string influxdb_info = 11;
    string grafana_info = 12;
}

message ReadUserRequest {
    string name = 1;
    string domain_name = 2;
    string token = 3;
}

message ReadUserResponse {
    string name = 1;
    string domain_name = 2;
    string role = 3;
    string company = 4;
    string email = 5;
    string first_name = 6;
    string last_name = 7;
    string phone = 8;
    string URL = 9;
    string status = 10;
    string influxdb_info = 11;
    string grafana_info = 12;
}

message UpdateUserRequest {
    string name = 1;
    string password = 2;
    string email = 3;
    string role = 4;
    string first_name = 5;
    string last_name = 6;
    string company = 7;
    string phone = 8;
    string URL = 9;
    string token = 10;
}

message UpdateUserResponse {
    string name = 1;
    string domain_name = 2;
    string role = 3;
    string company = 4;
    string email = 5;
    string first_name = 6;
    string last_name = 7;
    string phone = 8;
    string URL = 9;
    string status = 10;
    string influxdb_info = 11;
    string grafana_info = 12;
}

message DeleteUserRequest {
    string name = 1;
    string domain_name = 2;
    string token = 3;
}

message DeleteUserResponse {
    string name = 1;
    string domain_name = 2;
    string role = 3;
}

message LoginRequest {
    string name = 1;
    string password = 2;
    string domain_name = 3;
}

message LoginResponse {
    string name = 1;
    string access_token = 2;
    string token_type = 3;
    int32 expire_in = 4;
}

message LogoutRequest {
    string name = 1;
    string domain_name = 2;
    string access_token = 3;
}

service AccountsService {
    rpc CreateUser(CreateUserRequest)
        returns (CreateUserResponse) {}

    rpc ReadUser(ReadUserRequest)
        returns (ReadUserResponse) {}

    rpc UpdateUser(UpdateUserRequest)
        returns (UpdateUserResponse) {}

    rpc DeleteUser(DeleteUserRequest)
        returns (DeleteUserResponse) {}

    rpc Login(LoginRequest)
        returns (LoginResponse) {}

    rpc Logout(LogoutRequest)
        returns (google.rpc.Status) {}
}
