// Code generated by protoc-gen-go. DO NOT EDIT.
// source: apiserver/files/services.proto

package files // import "github.com/containers-ai/federatorai-api/apiserver/files"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import status "google.golang.org/genproto/googleapis/rpc/status"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DownloadRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DownloadRequest) Reset()         { *m = DownloadRequest{} }
func (m *DownloadRequest) String() string { return proto.CompactTextString(m) }
func (*DownloadRequest) ProtoMessage()    {}
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_2b210eebc67d5063, []int{0}
}
func (m *DownloadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DownloadRequest.Unmarshal(m, b)
}
func (m *DownloadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DownloadRequest.Marshal(b, m, deterministic)
}
func (dst *DownloadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DownloadRequest.Merge(dst, src)
}
func (m *DownloadRequest) XXX_Size() int {
	return xxx_messageInfo_DownloadRequest.Size(m)
}
func (m *DownloadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DownloadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DownloadRequest proto.InternalMessageInfo

type UploadRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadRequest) Reset()         { *m = UploadRequest{} }
func (m *UploadRequest) String() string { return proto.CompactTextString(m) }
func (*UploadRequest) ProtoMessage()    {}
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_2b210eebc67d5063, []int{1}
}
func (m *UploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRequest.Unmarshal(m, b)
}
func (m *UploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRequest.Marshal(b, m, deterministic)
}
func (dst *UploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRequest.Merge(dst, src)
}
func (m *UploadRequest) XXX_Size() int {
	return xxx_messageInfo_UploadRequest.Size(m)
}
func (m *UploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRequest proto.InternalMessageInfo

func init() {
	proto.RegisterType((*DownloadRequest)(nil), "containersai.apiserver.files.DownloadRequest")
	proto.RegisterType((*UploadRequest)(nil), "containersai.apiserver.files.UploadRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FilesServiceClient is the client API for FilesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FilesServiceClient interface {
	Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*status.Status, error)
	Upload(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*status.Status, error)
}

type filesServiceClient struct {
	cc *grpc.ClientConn
}

func NewFilesServiceClient(cc *grpc.ClientConn) FilesServiceClient {
	return &filesServiceClient{cc}
}

func (c *filesServiceClient) Download(ctx context.Context, in *DownloadRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/containersai.apiserver.files.FilesService/Download", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filesServiceClient) Upload(ctx context.Context, in *UploadRequest, opts ...grpc.CallOption) (*status.Status, error) {
	out := new(status.Status)
	err := c.cc.Invoke(ctx, "/containersai.apiserver.files.FilesService/Upload", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FilesServiceServer is the server API for FilesService service.
type FilesServiceServer interface {
	Download(context.Context, *DownloadRequest) (*status.Status, error)
	Upload(context.Context, *UploadRequest) (*status.Status, error)
}

func RegisterFilesServiceServer(s *grpc.Server, srv FilesServiceServer) {
	s.RegisterService(&_FilesService_serviceDesc, srv)
}

func _FilesService_Download_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DownloadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServiceServer).Download(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.apiserver.files.FilesService/Download",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServiceServer).Download(ctx, req.(*DownloadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilesService_Upload_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilesServiceServer).Upload(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/containersai.apiserver.files.FilesService/Upload",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilesServiceServer).Upload(ctx, req.(*UploadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FilesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "containersai.apiserver.files.FilesService",
	HandlerType: (*FilesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Download",
			Handler:    _FilesService_Download_Handler,
		},
		{
			MethodName: "Upload",
			Handler:    _FilesService_Upload_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "apiserver/files/services.proto",
}

func init() {
	proto.RegisterFile("apiserver/files/services.proto", fileDescriptor_services_2b210eebc67d5063)
}

var fileDescriptor_services_2b210eebc67d5063 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xbf, 0x4a, 0xc6, 0x40,
	0x10, 0xc4, 0xb5, 0xf9, 0x90, 0x43, 0xf9, 0xf0, 0x1a, 0x21, 0x88, 0x45, 0x5a, 0xc9, 0x1e, 0x68,
	0x23, 0x96, 0x22, 0x36, 0x16, 0x82, 0xc1, 0xc6, 0x6e, 0x73, 0xd9, 0xc4, 0x85, 0x98, 0x3d, 0xf7,
	0x2e, 0xfa, 0x52, 0x3e, 0xa4, 0x24, 0xf1, 0x6f, 0x90, 0x94, 0xbb, 0xcc, 0xfc, 0x66, 0x18, 0x73,
	0x82, 0x81, 0x23, 0xe9, 0x2b, 0xa9, 0x6b, 0xb8, 0xa3, 0xe8, 0xc6, 0x83, 0x3d, 0x45, 0x08, 0x2a,
	0x49, 0xec, 0xb1, 0x97, 0x3e, 0x21, 0xf7, 0xa4, 0x11, 0x19, 0xbe, 0xc5, 0x30, 0x89, 0xb3, 0xa3,
	0x56, 0xa4, 0xed, 0xc8, 0x69, 0xf0, 0x2e, 0x26, 0x4c, 0xc3, 0xa7, 0x2d, 0x3f, 0x34, 0xdb, 0x6b,
	0x79, 0xeb, 0x3b, 0xc1, 0xfa, 0x9e, 0x5e, 0x06, 0x8a, 0x29, 0xdf, 0x9a, 0x83, 0x87, 0xf0, 0xeb,
	0x71, 0xf6, 0xbe, 0x6b, 0xf6, 0x6f, 0x46, 0x4c, 0x39, 0x47, 0xda, 0x3b, 0xb3, 0xf7, 0x65, 0xb2,
	0x05, 0xac, 0x05, 0xc3, 0x02, 0x9e, 0x59, 0x98, 0x9b, 0x80, 0x06, 0x0f, 0xe5, 0xd4, 0x24, 0xdf,
	0xb1, 0xb7, 0x66, 0x33, 0x47, 0xda, 0xd3, 0x75, 0xdc, 0x9f, 0x62, 0xff, 0xc3, 0xae, 0x2e, 0x1f,
	0x2f, 0x5a, 0x4e, 0x4f, 0x43, 0x05, 0x5e, 0x9e, 0xdd, 0x0f, 0xae, 0x40, 0x76, 0x0d, 0xd5, 0xa4,
	0x98, 0x44, 0x91, 0x0b, 0x0c, 0xec, 0x16, 0xa3, 0x56, 0x9b, 0x69, 0x95, 0xf3, 0x8f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xe5, 0x32, 0x46, 0x24, 0x6e, 0x01, 0x00, 0x00,
}
